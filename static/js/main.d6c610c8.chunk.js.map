{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactList/transitions/pop.module.css","components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","components/App/App.module.css","components/Notification/transitions/slide.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/Logo/Logo.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactList","items","onDelete","length","TransitionGroup","component","className","styles","list","map","name","id","number","CSSTransition","key","timeout","classNames","popTransition","item","AsYouType","input","button","type","onClick","ContactForm","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onAddItem","clearState","this","onSubmit","maxLength","placeholder","onChange","required","pattern","Component","Filter","onSetFilter","loginInputId","uuid","Notification","notificationBox","Logo","in","appear","App","contacts","filter","contactAlreadyExist","filterContacts","contact","toLowerCase","includes","setFilter","addItem","every","toLocaleLowerCase","itemToAdd","deleteItem","filtratedContacts","container","slideTransition","unmountOnExit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6c610c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__wmz_A\",\"list\":\"ContactList_list__21VFl\",\"item\":\"ContactList_item__2Nhk7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__S-FZh\",\"enterActive\":\"pop_enterActive__wvH0s\",\"exit\":\"pop_exit__dtwp8\",\"exitActive\":\"pop_exitActive__ZMsA_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__Ldgsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationBox\":\"Notification_notificationBox__1HHcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__X-B99\",\"title\":\"App_title__2tPP1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__34AhW\",\"enterActive\":\"slide_enterActive__slnKG\",\"exit\":\"slide_exit__fgf0A\",\"exitActive\":\"slide_exitActive__Wy8Ej\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AsYouType } from 'libphonenumber-js';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styles from './ContactList.module.css';\nimport popTransition from './transitions/pop.module.css';\n\nconst ContactList = ({ items, onDelete }) => {\n  return items.length ? (\n    <TransitionGroup component=\"ul\" className={styles.list}>\n      {items.map(({ name, id, number }) => {\n        return (\n          <CSSTransition key={id} timeout={250} classNames={popTransition}>\n            <li className={styles.item}>\n              <span>\n                {name} {new AsYouType('US').input(number)}\n              </span>\n              <button\n                className={styles.button}\n                type=\"button\"\n                onClick={() => onDelete(id)}\n              >\n                &#10006;\n              </button>\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  ) : null;\n};\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddItem: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.name && this.state.number) {\n      this.props.onAddItem({ ...this.state });\n    }\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          maxLength=\"36\"\n          placeholder=\"Enter your name...\"\n          onChange={this.handleChange}\n          value={name}\n          required\n        />\n        <input\n          maxLength=\"10\"\n          name=\"number\"\n          placeholder=\"Enter your number...\"\n          onChange={this.handleChange}\n          value={number}\n          pattern=\"^[ 0-9]+$\"\n          required\n        />\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport uuid from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onSetFilter }) => {\n  const loginInputId = uuid();\n\n  return (\n    <form>\n      <h3>Find contact by name</h3>\n      <input\n        onChange={onSetFilter}\n        type=\"text\"\n        name=\"filter\"\n        id={loginInputId}\n        placeholder=\"Enter a name to search...\"\n      />\n    </form>\n  );\n};\nFilter.propTypes = {\n  onSetFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = () => {\n  return <div className={styles.notificationBox}>Contact already exist!</div>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport './transitions/logo.css';\n\nconst Logo = () => {\n  return (\n    <CSSTransition in timeout={5000} classNames=\"Logo\" appear>\n      <h1>Phonebook</h1>\n    </CSSTransition>\n  );\n};\n\nexport default Logo;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactList from '../ContactList/ContactList';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../Filter/Filter';\nimport Notification from '../Notification/Notification';\nimport styles from './App.module.css';\nimport slideTransition from '../Notification/transitions/slide.module.css';\nimport Logo from '../Logo/Logo';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    contactAlreadyExist: false,\n  };\n\n  filterContacts = (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  setFilter = ({ target }) => {\n    this.setState({\n      filter: target.value,\n    });\n  };\n\n  addItem = item => {\n    const isNotExist = this.state.contacts.every(\n      contact =>\n        contact.name.toLocaleLowerCase() !== item.name.toLocaleLowerCase(),\n    );\n    if (isNotExist) {\n      const itemToAdd = { ...item, id: uuid() };\n      this.setState(state => ({\n        contacts: [...state.contacts, itemToAdd],\n      }));\n    } else {\n      this.setState({ contactAlreadyExist: true });\n    }\n  };\n\n  deleteItem = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter, contactAlreadyExist } = this.state;\n    const filtratedContacts = this.filterContacts(contacts, filter);\n    return (\n      <div className={styles.container}>\n        <Logo />\n        <CSSTransition\n          in={contactAlreadyExist}\n          timeout={250}\n          classNames={slideTransition}\n          unmountOnExit\n        >\n          <Notification />\n        </CSSTransition>\n\n        <ContactForm onAddItem={this.addItem} />\n        <h2>Contacts</h2>\n        <Filter onSetFilter={this.setFilter} />\n        <ContactList items={filtratedContacts} onDelete={this.deleteItem} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}